name: Build iOS app

on:
  push:
    branches:
      - ios_ci_test
      - bixin_dev
  pull_request:
    branches:
      - bixin_dev

jobs:
  build:
    runs-on: macos-latest
    env:
      APP_ID: so.onekey.one.OneKey
      APP_NAME: OneKey
      EMAIL: hello@onekey.so
      PROJECT_WORKSPACE: OneKey.xcworkspace
      PROJECT_SCHEME: OneKey
      PROJECT_CONFIGURATION: OneKey
      CODE_SIGN_IDENTITY: iPhone Distribution
      UUID_PROVISION: 0242f34b-ae47-4587-8af5-7234d360d9d6
      DEVELOPMENT_TEAM: 6M2QF4T7XG
      WORKING-DIRECTORY: ios/iOS
      PUBLISH_IPA: false

    steps:
      - uses: actions/checkout@v2
        with:
            submodules: 'true'
      - name: Switch XCode Version
        run: sudo xcode-select -s /Applications/Xcode_12.1.app
      - name: Cache build env
        uses: actions/cache@v2
        env:
          cache-name: cache-ios-build
        with:
          # python cache files are stored in `~/.local` on Linux/macOS
          path: ~/.local
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install brew deps
        run: |
          brew install git
          brew install python@3.8
          brew unlink python
          brew link --force python@3.8
      - name: Install python3 deps
        run: |
          python3.8 -m pip install "setuptools==41.2.0"
          python3.8 -m pip install "pip==19.2.3"
          python3.8 -m pip install 'cookiecutter==1.6.0' --user
          python3.8 -m pip install 'briefcase==0.2.6' --user
          python3.8 -m pip install 'pbxproj==2.5.1' --user
      - name: Setup cert
        run: ./.github/secrets/decrypt_certs.sh
        env:
          IOS_CERTIFICATE_PASS: ${{ secrets.IOS_CERTIFICATE_PASS }}
          ENCRYPT_PASS: ${{ secrets.ENCRYPT_PASS }}
      - name: prepare build env
        run: |
          ./make_ios_project.sh
          gem install fir-cli
        working-directory: ios
#     - name: resign so file
#       run: ./coderesign.sh $PROJECT_SCHEME
#       working-directory: $WORKING-DIRECTORY
      - name: Build app
        id: xcodebuild_export
        run: |
          xcodebuild archive \
           -workspace "$PROJECT_WORKSPACE" \
           -scheme "$PROJECT_SCHEME" \
           -configuration "$PROJECT_CONFIGURATION" \
           -archivePath $PWD/build/app_build.xcarchive \
           CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
           DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
           PROVISIONING_PROFILE="$UUID_PROVISION" \
           > logs/xcodebuild_archive.log
        working-directory: $WORKING-DIRECTORY
      - name: Create ExportOptions
        run: create_export.sh
      - name: Export IPA
        id: xcodebuild_archive
        run: |
          xcodebuild -exportArchive \
          -exportPath $PWD/build \
          -archivePath $PWD/build/app_build.xcarchive \
          -exportOptionsPlist ${APP_NAME}/${APP_NAME}-Info.plist" > logs/xcodebuild_export.log
        working-directory: $WORKING-DIRECTORY
      - name: push to fir
        if: success()     
        run: |
            fir login -T xxx
            fir publish $PWD/build/$PROJECT_SCHEME.ipa
        working-directory: ios/iOS
      - name: Publish ipa to iTunes Connect
        if: env.PUBLISH_IPA == 'true'
        id: publish_ipa
        run: xcrun altool --upload-app --type ios \
              --file "$PWD/build/app_build.ipa" \
              --username "${{secrets.APPLE_USER}}" --password "${{secrets.APPLE_PASS}}" > logs/publish_ipa.log
        working-directory: $WORKING-DIRECTORY

